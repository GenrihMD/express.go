{"version":3,"names":[],"mappings":"","sources":["locateNAN.js"],"sourcesContent":["\"use strict\";\nlet Bluebird = require(\"bluebird\");\nlet fs = Bluebird.promisifyAll(require(\"fs-extra\"));\nlet path = require(\"path\");\nlet async = Bluebird.coroutine;\nlet _ = require(\"lodash\");\n\nlet isNANModule = async(function* (dir) {\n    let h = path.join(dir, \"nan.h\");\n    try {\n        let stat = yield fs.statAsync(h);\n        return stat.isFile();\n    }\n    catch (e) {\n        _.noop(e);\n        return false;\n    }\n});\n\nlet isNodeJSProject = async(function* (dir) {\n    let pjson = path.join(dir, \"package.json\");\n    try {\n        let stat = yield fs.statAsync(pjson);\n        return stat.isFile();\n    }\n    catch (e) {\n        _.noop(e);\n        return false;\n    }\n});\n\nlet locateNAN = module.exports = async(function* (projectRoot) {\n    let result = yield isNodeJSProject(projectRoot);\n    if (!result) {\n        return null;\n    }\n    let nanModulePath = path.join(projectRoot, \"node_modules\", \"nan\");\n    result = yield isNANModule(nanModulePath);\n    if (result) {\n        return nanModulePath;\n    }\n\n    // Goto upper level:\n    projectRoot = path.normalize(path.join(projectRoot, \"..\", \"..\"));\n    return yield locateNAN(projectRoot);\n});"],"file":"locateNAN.js","sourceRoot":"/source/"}